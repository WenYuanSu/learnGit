git 命令大全

//设置名字和邮箱，如果用了--global这个参数，表示当前机器上所有的git仓库都会使用这个配置。
git config --global user.name "在这里输入你的名字"  （随便填）  
git config --global user.email "在这里输入你的邮箱"
//将当前目录变成git可以管理的仓库
git init
//添加指定文件到暂存区，可以多次添加不同的文件
git add 文件名
//将暂存区的修改提交到仓库，多次添加，一次提交
git commit -m "注释或者说明"
//查看当前仓库的状态,涉及到文件的修改都会改变仓库状态
git status
//查看当前文件与版本库中的文件有什么不同
git diff 文件名
//查看最近到最远的操作日志,日志过长时可以按q退出。
git log
//日志中每条操作记录只显示一行信息
git log --pretty=oneline
//将当前版本库回退到上一个版本，每多一个^便多回退一个版本，回退指定数量的版本用git reset --hard HEAD~数字 即可
git reset --hard HEAD^
//将当前版本库回到指定版本，版本ID只需要输入能区分唯一性的前几位即可,git会自动寻找满足条件的版本
git reset --hard 版本ID
//撤销当前文件在工作区的修改(包括修改和删除),其实就是用版本库里的文件替换当前文件
git checkout -- 文件名
git restore 文件名
//将当前文件从暂存区的修改撤回到工作区
git reset HEAD 文件名
git restore --staged 文件名
//删除指定文件
git rm 文件名
//查看远程仓库的信息
git remote
//查看远程仓库的详细信息
git remote -v
//将本地仓库与远程仓库关联 如：SSH：git@github.com:WenYuanSu/learnGit.git  HTTPS：https://github.com/WenYuanSu/learnGit.git
git remote add 远程仓库名 git@github.com:GitHub账户名/仓库名.git
git remote add 远程仓库名 https://github.com/WenYuanSu/learnGit.git
//将本地仓库推送到远程仓库并关联，参数-u是让本地仓库的master分支和远程仓库的master分支关联起来，以后推送就不用再加-u了
git push -u 远程仓库名 master
//查看当前所有分支
git branch
//创建分支
git branch 分支名
//切换分支
git checkout 分支名
git switch 分支名(推荐使用)
//创建并切换分支
git checkout -b 分支名
git switch -c 分支名(推荐使用)
//合并指定分支到当前分支
git merge 指定分支名
//删除分支
git branch -d 指定分支名
//强制删除分支
git branch -D 指定分支名
//查看分支合并图
git log --graph
//合并指定分支到当前分支，禁用fast forward模式
git merge --no-ff 分支名
//保存当前工作现场，即当前分支的状态
git stash
//查看保存的工作现场
git stash list
//恢复工作现场
git stash apply
//删除工作现场
git stash drop
//恢复工作现场并删除stash保存的内容
git stash pop
//复制指定的提交到当前分支
git cherry-pick 提交ID
//克隆远程仓库到本地,只会克隆master分支  如：  git clone git@github.com:WenYuanSu/learnGit.git
git clone 远程仓库地址
//从远程仓库抓取最新的提交
git pull
//设置本地仓库分支与远程仓库分支的链接 如： git branch --set-upstream-to=origin/dev dev
git branch --set-upstream-to=远程仓库分支名
//把本地未push的分叉提交历史整理成直线
git rebase
//给commit打上标签
git tag 标签名
git tag -a 标签名 -m "说明" commit的ID
//显示标签信息
git show 标签名

//新建文件夹
mkdir 文件名
//跳转到指定位置  cd d: 跳转到D盘  cd d://git跳转到D盘的git文件夹  cd d://git/learnGit
cd 路径
//显示当前目录
pwd

//创建SSH key
ssh-keygen -t rsa -C "邮箱"

//通过SSH协议连接GitHub
ssh -T git@github.com
//连接报"ssh: connect to host github.com port 22: Connection timed out"错误
//在存放公钥私钥(id_rsa和id_rsa.pub)的文件里，新建config文本
Host github.com
User 登录邮箱
Hostname ssh.github.com
PreferredAuthentications publickey
IdentityFile ~/.ssh/id_rsa
Port 443
//再次执行”ssh -T git@github.com”时，会出现提示如下，回车”yes”即可。 


